apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ name }}
  name: {{ name }}
  namespace: {{ namespace }}
spec:
  replicas: {{ replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ name }}
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ name }}
    spec:
      containers:
        - image: {{ image }}
          imagePullPolicy: IfNotPresent
          tty: true
          stdin: true
          name: {{ name }}
          ports:
          {{#each ports}}
            - containerPort: {{ this.port }}
          {{/each}}
          {{#if readiness }}
          readinessProbe:
            httpGet:
              path: {{ readiness.path }}
              port: {{ readiness.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          {{/if}}
          {{#if envFrom.[0]}}
          envFrom:
            {{#each envFrom}}
            - {{ this.type }}:
                name: {{ this.name }}
            {{/each}}
          {{/if}}
          resources:
            requests:
              cpu: {{ cpu }}
              memory: {{ memory }}
              ephemeral-storage: {{ storage }}
          {{#if volumeMounts.[0]}}
          volumeMounts:
            {{#each volumeMounts}}
            - name: {{ this.name }}
              mountPath: {{ this.mountPath }}
              subPath: {{ this.subPath }}
              readOnly: {{ this.readOnly }}
            {{/each}}
          {{/if}}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{#if volumeMounts.[0]}}
      volumes:
        {{#each volumeMounts}}
        - name: {{ this.name }}
          secret:
            secretName: {{ this.secretName }}
        {{/each}}
      {{/if}}
